import React, { useState, useEffect } from "react";
import { Button } from "@mui/material";
import { useNavigate } from "react-router-dom";
import "../../style/Account/signup.css";
import { toast } from "react-toastify";
import Form from "react-bootstrap/Form";
import { useSelector, useDispatch } from "react-redux";
import { register, reset, logout } from "../../../rtk/features/auth/authSlice";
import Spinner from "../../Spinner";
import VisibilityIcon from "@mui/icons-material/Visibility";
import VisibilityOffIcon from "@mui/icons-material/VisibilityOff";

const SignUp = () => {
  const [changIcon, setChangIcon] = useState(true);
  const [changIcon2, setChangIcon2] = useState(true);

  const [formData, setFormData] = useState({
    firstname: "",
    lastname: "",
    username: "",
    email: "",
    mobilenumber: "",
    password: "",
    confirmPassword: "",
  });
  const {
    firstname,
    lastname,
    username,
    email,
    mobilenumber,
    password,
    confirmPassword,
  } = formData;

  const navigate = useNavigate();
  const dispatch = useDispatch();

  const { user, isLoading, isError, isSuccess, message } = useSelector(
    (state) => state.auth
  );

  useEffect(() => {
    if (isError) {
      toast.error(message);
    }
    if (isSuccess && user.status === "succes") {
      toast.success("Sucessfull");
      dispatch(logout());
      // dispatch(reset())
      // window.location.reload()
      navigate("/");
    }
    dispatch(reset());
  }, [user, isError, isSuccess, message, navigate, dispatch]);

  const onChange = (e) => {
    setFormData((prevState) => ({
      ...prevState,
      [e.target.name]: e.target.value,
    }));
  };

  const onSubmit = (e) => {
    e.preventDefault();
    if (password !== confirmPassword) {
      toast.error("Passwords do not match");
    } else {
      const userData = {
        firstname,
        lastname,
        username,
        email,
        mobilenumber,
        password,
        confirmPassword,
      };
      if (user && user.status === "failed") {
        toast.error("Fill all the entries");
      }
      dispatch(register(userData));
    }
  };

  if (isLoading) {
    return <Spinner />;
  }
  const changeEyeIconHandle = () => {
    setChangIcon(!changIcon);
  };
  const changeEyeIconHandle2 = () => {
    setChangIcon2(!changIcon2);
  };

  return (
    <>
      <div className="imagebackgroundforsignup">
        <div className="signupform">
          <div className="topcontaintonsignup">
            <h1 className="signinheader">Create Account</h1>
            <p className="subheaderparagraphonsingup">
              Please fill the form to create your account
            </p>
          </div>

          <Form onSubmit={onSubmit}>
            <div className="signuphalfinput">
              <div className="formInput1">
                <div className="forminputdiv">
                  <input
                    className="inputforaccountpage"
                    type="text"
                    name="firstname"
                    placeholder="First name"
                    value={firstname}
                    onChange={onChange}
                  />
                </div>
              </div>
              <div className="formInput1">
                <div className="forminputdiv">
                  <input
                    className="inputforaccountpage"
                    type="text"
                    name="lastname"
                    placeholder="Last name"
                    onChange={onChange}
                    value={lastname}
                  />
                </div>
              </div>
            </div>
            <div className="signuphalfinput">
              <div className="formInput1">
                <div className="forminputdiv">
                  <input
                    className="inputforaccountpage"
                    type="text"
                    name="username"
                    placeholder="Username"
                    onChange={onChange}
                    value={username}
                  />
                </div>
              </div>
              <div className="formInput1">
                <div className="forminputdiv">
                  <input
                    className="inputforaccountpage"
                    type="text"
                    name="email"
                    placeholder="E-mail address"
                    onChange={onChange}
                    value={email}
                  />
                </div>
              </div>
            </div>

            <div className="formInput">
              <div className="forminputdiv">
                <input
                  className="inputforaccountpage"
                  type="text"
                  name="mobilenumber"
                  placeholder="Mobile number"
                  onChange={onChange}
                  value={mobilenumber}
                />
              </div>
            </div>
            <div className="formInput">
              <div className="forminputdiv">
                <input
                  className="inputforaccountpage"
                  type={changIcon ? "password" : "text"}
                  name="password"
                  placeholder="Password"
                  onChange={onChange}
                  value={password}
                />
                {changIcon ? (
                  <VisibilityIcon
                    onClick={changeEyeIconHandle}
                    sx={{ marginLeft: "0px" }}
                  />
                ) : (
                  <VisibilityOffIcon
                    onClick={changeEyeIconHandle}
                    sx={{ marginLeft: "0px" }}
                  />
                )}
              </div>
            </div>
            <div className="formInput">
              <div className="forminputdiv">
                <input
                  className="inputforaccountpage"
                  type={changIcon2 ? "password" : "text"}
                  name="confirmPassword"
                  placeholder="Confirm password"
                  onChange={onChange}
                  value={confirmPassword}
                />
                {changIcon2 ? (
                  <VisibilityIcon
                    onClick={changeEyeIconHandle2}
                    sx={{ marginLeft: "0px" }}
                  />
                ) : (
                  <VisibilityOffIcon
                    onClick={changeEyeIconHandle2}
                    sx={{ marginLeft: "0px" }}
                  />
                )}
              </div>
            </div>

            <Button className="formsubmitbuttononsingup" type="submit">
              SIGN UP
            </Button>
            <Button className="signinonsignup" onClick={() => navigate("/")}>
              SIGN IN
            </Button>
          </Form>
        </div>
      </div>
    </>
  );
};

export default SignUp;
